name: Curriculum Deployment

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  push:
    branches:
      - main
    paths:
      - 'courses/**'

jobs:
  prepare-and-create-release:
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.define-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Define the new tag
        id: define-tag
        run: |
          DATE=$(date +'%y.%m.%d')
          RUN_NUMBER=${{ github.run_number }}
          NEW_TAG="v$DATE-${RUN_NUMBER}"
          echo "New tag will be $NEW_TAG"
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release with GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.TAG }} \
            --prerelease \
            --title "${{ env.TAG }}" \
            --notes "Release notes or description" \
            --draft=false

  update-release:
    runs-on: ubuntu-latest
    needs: prepare-and-create-release
    env: 
      NEW_RELEASE_TAG: ${{ needs.prepare-and-create-release.outputs.release-tag }}
    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v4
      #   with:
      #     ref: ${{ needs.prepare-and-create-release.outputs.release-tag }}
      - name: Find Latest Pre-Release
        id: get-pre-release
        run: |
          LATEST_PRE_RELEASE=$(gh release list --json tagName,isPrerelease --jq '.[] | select(.isPrerelease == true) | .tagName' | head -n 1)
          echo "tag_name=$LATEST_PRE_RELEASE" >> $GITHUB_ENV"
      # echo "::set-output name=tag_name::$LATEST_PRE_RELEASE"
      # echo "new_release_tag=$TAG_NAME" >> $GITHUB_OUTPUT # To share with other jobs
    
      - name: Promote Pre-Release to Release
        if: env.NEW_RELEASE_TAG
        run: gh release edit "${{ env.NEW_RELEASE_TAG }}" --repo ${{ github.repository }} --draft=false --pre-release=false
        
      # - name: Promote Pre-Release to Release
      #   run: gh release edit "${{ env.NEW_RELEASE_TAG }}" --repo ${{ github.repository }} --draft=false --pre-release=false
      
      # - uses: actions/cache@v4
      #   id: cache-virtualenv
      #   with:
      #     path: ".virtualenv"
      #     key: "python-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}"

      # - if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      #   run: make --no-print-directory require-virtualenv

      # - uses: actions/setup-python@v5
      #   id: setup-python
      #   with:
      #     python-version: "3.9"
            
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install PyGithub
      
      # - name: Print Current Working Directory
      #   run: pwd
      
      # - name: Detect Changes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     REPOSITORY_NAME: ${{ github.repository }}
      #   run: python3 tools/deployment/detect_changes.py