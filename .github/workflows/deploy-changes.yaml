name: Course Change Detection

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  push:
    branches:
      - main
    paths:
      - 'courses/**'

jobs:

  explore-github-context:
    runs-on: ubuntu-latest
    steps:
      - name: Print github context object
        run: echo "${{ toJson(github) }}"
      
      - name: Print GITHUB_ prefixed environment variables
        run: printenv | grep GITHUB_

  prepare-and-create-release:
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.define-tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Define the new tag
        id: define-tag
        run: |
          DATE=$(date +'%y.%m.%d')
          RUN_NUMBER=${{ github.run_number }}
          NEW_TAG="v$DATE-${RUN_NUMBER}"
          echo "New tag will be $NEW_TAG"
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$NEW_TAG"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: false
          prerelease: false


  detect-changes:
    runs-on: ubuntu-latest
    needs: prepare-and-create-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.prepare-and-create-release.outputs.release-tag }}
      
      - uses: actions/cache@v4
        id: cache-virtualenv
        with:
          path: ".virtualenv"
          key: "python-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}"

      # - if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      #   run: make --no-print-directory require-virtualenv

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.9"
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
      
      - name: Print Current Working Directory
        run: pwd
      
      - name: Detect Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python3 tools/detect_changes.py