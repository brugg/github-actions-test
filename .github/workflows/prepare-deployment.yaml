name: Conditional Daily Deployment Preparation (Weekdays Only)

on:
  schedule:
    # Runs at 9:00 AM GMT, Monday through Friday
    - cron: '0 9 * * 1-5'
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-for-changes.outputs.has_changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetches all history for all branches and tags

      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* 

      - name: Install GitHub CLI (if not already installed)
        run: |
          if ! gh --version &>/dev/null; then
            sudo apt update
            sudo apt install -y gh
          fi

      - name: Fetch the latest release that is not a draft or pre-release
        id: latest_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASES=$(gh api repos/${{ github.repository }}/releases --paginate)
          echo "Fetched releases:"
          echo "$RELEASES" | jq '.'  # Print the details of fetched releases

          LATEST_RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.draft == false and .prerelease == false) | .tag_name' | head -n 1)
          if [ -z "$LATEST_RELEASE" ]; then
            echo "No suitable release found."
            echo "::set-output name=has_changes::false"
          else
            echo "Latest suitable release: $LATEST_RELEASE"
            echo "::set-output name=tag::$LATEST_RELEASE"
            echo "::set-output name=has_changes::true"
          fi

      - name: Check for changes between latest suitable release and main
        if: steps.latest_release.outputs.tag
        id: check_changes
        run: |
          LAST_RELEASE=${{ steps.latest_release.outputs.tag }}
          echo "Checking for changes between $LAST_RELEASE and main..."
          # Simplified check for the existence of the tag
          if git rev-parse "$LAST_RELEASE" --; then
            CHANGES=$(git diff --name-only "$LAST_RELEASE"..main)
            if [ -z "$CHANGES" ]; then
              echo "No changes detected between $LAST_RELEASE and main."
              echo "::set-output name=has_changes::false"
            else
              echo "Changes detected between $LAST_RELEASE and main."
              echo "::set-output name=has_changes::true"
            fi
          else
            echo "Tag $LAST_RELEASE not found in the repository."
            echo "::set-output name=has_changes::false"
          fi

  run-scripts:
    needs: check-for-changes
    if: needs.check-for-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # Add your steps here to set up the environment, run scripts, etc.
