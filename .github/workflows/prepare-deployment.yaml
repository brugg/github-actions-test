name: Conditional Daily Deployment Preparation (Weekdays Only)

on:
  schedule:
    # Runs at 9:00 AM GMT, Monday through Friday
    - cron: '0 9 * * 1-5'
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check-for-changes:
    runs-on: ubuntu-latest

    outputs:
      changes-detected: ${{ steps.changes.outputs.changes-detected }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetches all history for all branches and tags

      - name: Get latest non-draft release tag
        id: latest-release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          RELEASES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/releases?per_page=5")
          echo "Fetched releases:"
          echo "$RELEASES" | jq '.'  # Print the details of fetched releases

          LATEST_RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.draft==false and .prerelease==false) | .tag_name' | head -n 1)
          echo "Latest non-draft, non-prerelease release tag: $LATEST_RELEASE"
          echo "::set-output name=latest-release-tag::$LATEST_RELEASE"

      - name: Check for changes between latest release tag and main
        id: changes
        run: |
          if [ -z "${{ steps.latest-release.outputs.latest-release-tag }}" ]; then
            echo "No non-draft releases found."
            echo "::set-output name=changes-detected::false"
          else
            CHANGES=$(git diff --name-only ${{ steps.latest-release.outputs.latest-release-tag }}..main)
            if [ -n "$CHANGES" ]; then
              echo "Changes detected between ${{ steps.latest-release.outputs.latest-release-tag }} and main."
              echo "::set-output name=changes-detected::true"
            else
              echo "No changes detected between ${{ steps.latest-release.outputs.latest-release-tag }} and main."
              echo "::set-output name=changes-detected::false"
            fi
          fi

  run-scripts:
    needs: check-for-changes
    if: needs.check-for-changes.outputs.changes-detected == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Add your steps here to set up the environment, run scripts, etc.
