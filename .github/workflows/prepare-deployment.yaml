name: Prepare deployment

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      new_release_tag: ${{ steps.create-tag-name.outputs.new_release_tag }}
    steps:
      - name: Install GitHub CLI
        run: |
          if ! gh --version &>/dev/null; then
            sudo apt update
            sudo apt install -y gh
          fi

      - name: Create new release name
        id: create-tag-name
        run: |
          DATE=$(date +'%y.%m.%d')
          JOB_NUMBER=${GITHUB_RUN_NUMBER}
          TAG_NAME="v$DATE-$JOB_NUMBER"
          echo "new_release_tag=$TAG_NAME" >> $GITHUB_OUTPUT # To share with other jobs
          echo "new_release_tag=$TAG_NAME" >> $GITHUB_ENV # To share with the next steps in this job
          echo $TAG_NAME

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$new_release_tag" \
            --prerelease \
            --repo ${{ github.repository }} \
            --title "$new_release_tag" \
            --notes "This is an auto-generated release."
  
  generate_artifacts:
    runs-on: ubuntu-latest
    needs: create-release
    permissions: # Add "id-token" with the intended permissions.
      contents: "write"
      id-token: "write"
    env: 
      NEW_RELEASE_TAG: ${{ needs.create-release.outputs.new_release_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.NEW_RELEASE_TAG }}

      - name: Prepare Deploy
        env:
          REPOSITORY_NAME: ${{ github.repository }}
        run: |
          echo Start preparing deplooyment with release name: ${{ env.NEW_RELEASE_TAG }}
        
      - name: Zip Generated Files
        run: |
          zip -r files.zip deploy

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_RELEASE_TAG }}
          files: files.zip